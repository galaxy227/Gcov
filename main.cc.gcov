        -:    0:Source:main.cc
        -:    1:#include "rainfall.h"
        -:    2:#include <iostream>
        -:    3:#include <chrono>
        -:    4:using Time = std::chrono::high_resolution_clock::time_point;
        -:    5:using Clock = std::chrono::high_resolution_clock;
        -:    6:using Duration = std::chrono::duration<float>;
        -:    7:using namespace std;
        -:    8:
        -:    9:// Version used to identify rainfall program in benchmark file
        -:   10:static const int version = 1;
        -:   11:
        1:   12:int main() {
        -:   13:	// Start benchmark
        1:   14:	Time start_time = Clock::now();	
        -:   15:
        -:   16:	// Rainfall
        1:   17:	vector<int> rainyDays;
        1:   18:	vector<int> totalDays;
        -:   19:
        1:   20:	Rainfall::init_data(rainyDays, totalDays);
        -:   21:
        1:   22:	int userChoice = 0;
        -:   23:
       6*:   24:	while (userChoice < 1 or userChoice > 6) {
        6:   25:		Rainfall::print_user_prompt();	
        -:   26:
        6:   27:		cin >> userChoice;
        -:   28:		//If user's input is invalid, clear it and reprompt.
        6:   29:		if (!cin) {
    #####:   30:			exit(1);
        -:   31:		}
        -:   32:		//Else if they choose something outside of 1 - 5...
        6:   33:		else if (userChoice < 1 or userChoice > 6) {
    #####:   34:			while (userChoice < 1 or userChoice > 6) {
    #####:   35:				cin.clear();
    #####:   36:				cin.ignore(2200000000, '\n');
        -:   37:
    #####:   38:				Rainfall::print_user_prompt();
        -:   39:
    #####:   40:				cin >> userChoice;
        -:   41:			}
        -:   42:		}
        -:   43:		//Else if the user wants avg daily rainfall...
        6:   44:		else if (userChoice == 1) {
        1:   45:			Rainfall::print_avg_daily(totalDays);
        -:   46:		}
        -:   47:		//Else if the user wants avg rainfall on rainy days...
        5:   48:		else if (userChoice == 2) {
        1:   49:			Rainfall::print_avg_rainy(rainyDays);
        -:   50:		}
        -:   51:		//Else if the user wants total number that has days...
        4:   52:		else if (userChoice == 3) {
        1:   53:			Rainfall::print_total_rainfall(rainyDays, totalDays);
        -:   54:		}
        -:   55:		//Else if the user wants max rainfall value...
        3:   56:		else if (userChoice == 4) {
        1:   57:			Rainfall::print_max_rainfall(rainyDays);
        -:   58:		}
        -:   59:		//Else if the user wants top 5 days of rain...
        2:   60:		else if (userChoice == 5) {
        1:   61:			Rainfall::print_top_rainfall(rainyDays);
        -:   62:		}
        -:   63:		//Else if user wants to quit, quit.
        1:   64:		else if (userChoice == 6) {
        1:   65:			break;
        -:   66:		}
        -:   67:
        5:   68:		userChoice = 0;
        -:   69:	}
        -:   70:
        -:   71:	// End benchmark
        1:   72:	Duration duration = Clock::now() - start_time;
        1:   73:	Rainfall::write_benchmark(version, duration.count(), totalDays);
        1:   74:}
